<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PcManage">

    <local:ConverterColor_DimGray_LightGreen x:Key="ColorDimGray_LightGreen"></local:ConverterColor_DimGray_LightGreen>
    <local:ConverterColor_LightGray_Green x:Key="ColorLightGray_LightGreen"></local:ConverterColor_LightGray_Green>
    <!--Style Column Head trong ListView-->
    <Style TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="BorderBrush" Value="LightGray"/>        
    </Style>

    <!--Đường dẫn tự động thay đổi màu ROW trong ListView-->
    <local:ConverColorRowListView x:Key="converterRowListView"></local:ConverColorRowListView>
    <Style TargetType="ListViewItem" x:Key="styleConvertColorRowListView" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding ID, Converter={StaticResource converterRowListView}}" Value="+1">
                <Setter Property="Background" Value="White"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding ID, Converter={StaticResource converterRowListView}}" Value="-1">
                <Setter Property="Background" Value="#E8E8E8"></Setter>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGreen"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontWeight" Value="DemiBold"/>                
            </Trigger>
        </Style.Triggers>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
    </Style>
    <Style TargetType="TextBox" x:Key="styleConvertColorTextBoxRowListView" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding ID, Converter={StaticResource converterRowListView}}" Value="+1">
                <Setter Property="Background" Value="White"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding ID, Converter={StaticResource converterRowListView}}" Value="-1">
                <Setter Property="Background" Value="#E8E8E8"></Setter>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGreen"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style TargetType="ListView" x:Key="styleListViewHorizontal">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal">
                    </WrapPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style Button của Main Header-->
    <Style TargetType="Button" x:Key="styleButtonMainHeader">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="Background" Value="#AAAAAA"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="DimGray" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGreen"/>               
            </Trigger>
        </Style.Triggers>

    </Style>
    
    <!--Style Button hình tròn sử dụng cho Shutdow và Language-->
    <Style TargetType="Button" x:Key="styleButtonRound">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DodgerBlue"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--Style Button cho ItemMenu control thuộc ListView-->
    <Style TargetType="Button" x:Key="styleButtonItemMenu">
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5"/>       
        <Setter Property="Background" Value="#B5B5B5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="DimGray" BorderThickness="1" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGreen"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Style Button cho ItemEdit -->
    <Style TargetType="Button" x:Key="styleButtonEdit">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="30"/>       
        <Setter Property="Background" Value="LightGray"/>
        <!--<Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="LightGreen"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="LightGray"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>-->
        
        
        <!--<Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="CadetBlue"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="styleButtonMenuControl">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Width="10" Height="45">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGreen"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="styeTextBlockHeader">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="#363636"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextAlignment" Value="Center"/>       
    </Style>
    <Style TargetType="TextBlock" x:Key="styeTextBlockEdit">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="#363636"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Image" x:Key="styleImageHeader">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>       
    </Style>
    <Style TargetType="Image" x:Key="styleImageEdit">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="0,0,5,0"/>

    </Style>
    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBox x:Name="PART_TextBox" BorderBrush="Transparent" BorderThickness="0"
                                    Text="{Binding Path=SelectedDate, StringFormat='yyyy/MM/dd', 
                                    RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}">
                        
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Button clean in TextBox-->
    <Style TargetType="Button" x:Key="ButtonClean">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{x:Null}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="styleButtonClean">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGreen"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ContextMenu x:Key="TextBlockContextMenu">
        <MenuItem Header="Menu item 1" />
        <MenuItem Header="Menu item 2" />
        <Separator />
        <MenuItem Header="Menu item 3" />
    </ContextMenu>

</ResourceDictionary>